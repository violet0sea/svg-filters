{"version":3,"sources":["webpack:///./src/pages/index.js","webpack:///./src/components/seo.js"],"names":["navList","key","to","IndexPage","title","className","map","d","SEO","description","lang","meta","site","metaDescription","siteMetadata","console","log","htmlAttributes","titleTemplate","name","content","property","author","concat","defaultProps"],"mappings":"2FAAA,qDAOMA,GAPN,OAOgB,CACd,CACEC,IAAK,YACLC,GAAI,gBAEN,CACED,IAAK,WACLC,GAAI,YAEN,CACED,IAAK,UACLC,GAAI,WAEN,CACED,IAAK,UACLC,GAAI,WAEN,CACED,IAAK,UACLC,GAAI,WAEN,CACED,IAAK,gBACLC,GAAI,iBAEN,CACED,IAAK,cACLC,GAAI,SAEN,CACED,IAAK,YACLC,GAAI,eAiBOC,UAbG,kBAChB,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAKC,MAAM,SACX,yBAAKC,UAAU,YACZL,EAAQM,KAAI,SAAAC,GAAC,OACZ,yBAAKF,UAAU,WAAWJ,IAAKM,EAAEN,KAC/B,kBAAC,OAAD,CAAMC,GAAIK,EAAEL,IAAKK,EAAEL,Y,gFCpC7B,SAASM,EAAT,GAAkD,IAAnCC,EAAkC,EAAlCA,YAAaC,EAAqB,EAArBA,KAAMC,EAAe,EAAfA,KAAMP,EAAS,EAATA,MAC9BQ,EADuC,OACvCA,KAcFC,EAAkBJ,GAAeG,EAAKE,aAAaL,YAEzD,OADAM,QAAQC,IAAI,MAAOL,GAEjB,kBAAC,IAAD,CACEM,eAAgB,CACdP,QAEFN,MAAOA,EACPc,cAAa,QAAUN,EAAKE,aAAaV,MACzCO,KAAM,CACJ,CACEQ,KAAK,cACLC,QAASP,GAEX,CACEQ,SAAS,WACTD,QAAShB,GAEX,CACEiB,SAAS,iBACTD,QAASP,GAEX,CACEQ,SAAS,UACTD,QAAQ,WAEV,CACED,KAAK,eACLC,QAAQ,WAEV,CACED,KAAK,kBACLC,QAASR,EAAKE,aAAaQ,QAE7B,CACEH,KAAK,gBACLC,QAAShB,GAEX,CACEe,KAAK,sBACLC,QAASP,IAEXU,OAAOZ,KAKfH,EAAIgB,aAAe,CACjBd,KAAK,KACLC,KAAM,GACNF,YAAY,IAUCD,O","file":"component---src-pages-index-js-103cbcee6ade4595ae34.js","sourcesContent":["import React from \"react\"\nimport { Link } from \"gatsby\"\n\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\nimport \"../style/index.css\"\n\nconst navList = [\n  {\n    key: \"gaussblur\",\n    to: \"gaussianblur\",\n  },\n  {\n    key: \"feOffset\",\n    to: \"feoffset\",\n  },\n  {\n    key: \"feImage\",\n    to: \"feimage\",\n  },\n  {\n    key: \"feFlood\",\n    to: \"feflood\",\n  },\n  {\n    key: \"feBlend\",\n    to: \"feblend\",\n  },\n  {\n    key: \"feColorMatrix\",\n    to: \"fecolormatrix\",\n  },\n  {\n    key: \"gooeyEffect\",\n    to: \"gooey\",\n  },\n  {\n    key: \"gooeyMenu\",\n    to: \"gooeymenu\",\n  },\n]\n\nconst IndexPage = () => (\n  <Layout>\n    <SEO title=\"Home\" />\n    <div className=\"nav-list\">\n      {navList.map(d => (\n        <div className=\"nav-item\" key={d.key}>\n          <Link to={d.to}>{d.to}</Link>\n        </div>\n      ))}\n    </div>\n  </Layout>\n)\n\nexport default IndexPage\n\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Helmet from \"react-helmet\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nfunction SEO({ description, lang, meta, title }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n  console.log(\"---\", meta)\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata.author,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ].concat(meta)}\n    ></Helmet>\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  description: ``,\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.arrayOf(PropTypes.object),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n"],"sourceRoot":""}